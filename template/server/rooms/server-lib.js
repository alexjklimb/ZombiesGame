<<<<<<< HEAD
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports["server-lib"]=e():t["server-lib"]=e()}(global,(function(){return t={541:t=>{function e(t,e,i,s){const o="x"===i?[e.x-e.width/2,e.x+e.width/2]:[e.y-e.height/2,e.y+e.height/2],n="x"===i?t.width:t.height;return s<0?o[1]+n/2:o[0]-n/2}function i(t,e,i){const s=t[i]>e[i]?1:-1,o="x"===i?"y":"x";return Math.sqrt(Math.pow(t.width/2+e.width/2+2e-6,2)-Math.pow(t[o]-e[o],2))*s+e[i]}function s(t,e,s,o){const n=t.width/2;let c=[];for(let t in o)o[t]<n&&c.push(t);const a={left:!1,top:!1,right:!0,bottom:!0};function r(o,n){const r=e.x+e.width/2*(a[o]?1:-1),h=e.y+e.height/2*(a[n]?1:-1),l=a[o]?[r,t.x]:[t.x,r],d=a[n]?[h,t.y]:[t.y,h];if(c.includes(o+"Dist")&&c.includes(n+"Dist")&&l[0]<l[1]&&d[0]<d[1]){newPos=i(t,{x:r,y:h,width:0},s);const e=a["x"===s?o:n]?[t[s],newPos]:[newPos,t[s]];return e[0]<e[1]?newPos:t[s]}}return r("left","top")||r("left","bottom")||r("right","top")||r("right","bottom")||-1}const o={useBarrier:function(t,e){const{barriers:i}=this.game;Object.keys(i).includes(t)?i[t].push(e):i[t]=[e]},checkBarriers:function(t,o,n){const{barriers:c,shapes:a}=this.game;let r=!0,h=-1;return Object.keys(c).includes(t.type)&&c[t.type].forEach((c=>{this.handleCollision({...t,[o]:t[o]+n},c,((t,l,d)=>{if(r=!1,"circle"===a[c]&&"circle"===a[t.type])h=i(t,l,o);else if("circle"===a[c]){const i=s(l,t,o,d);h=-1!==i?t[o]+l[o]-i:e(t,l,o,n)}else if("circle"===a[t.type]){const i=s(t,l,o,d);h=-1!==i?i:e(t,l,o,n)}else h=e(t,l,o,n)}))})),{validMove:r,fallbackPos:h}}};t.exports={server:o}},222:t=>{const e={setupCharacters:function(t,e="box"){this.game.state[t]={},this.game.shapes[t]=e},createACharacter:function(t,e,i){this.game.state[t][e]={...this.getSize(t),...i,id:e,type:t}},getACharacter:function(t,e){return this.game.state[t][e]},deleteACharacter:function(t,e){delete this.game.state[t][e]},nextCharacterId:function(t){return`${t}${Object.keys(this.game.state[t]).length+1}`}};t.exports={client:{addCharacters:function(t,e=1){this.game[t]={},this.game.scales[t]=e,this.sendSpriteSize(t,e)},getCharacters:function(t,e=function(){},i=function(){},s=function(){}){const{game:o}=this;o.roomJoined?(o.room.listen(t+"/:id",(function(s){if("add"==s.operation){const{id:i,x:n,y:c}=s.value,a=o.add.sprite(n,c,t);a.setScale(o.scales[t]||1),o[t][i]={sprite:a,...s.value},e(o[t][i],s.value)}else if("remove"==s.operation){const{id:e}=s.path;o[t][e].sprite.destroy(),delete o[t][e],i(e)}})),o.room.listen(t+"/:id/:attribute",(function(e){if("replace"==e.operation){const{id:i,attribute:n}=e.path;"x"==n||"y"==n?o[t][i].sprite[n]=e.value:o[t][i][n]=e.value,s(i,n,e.value)}}))):this.addConnectEvent("getCharacters",[t,e,i,s])}},server:e}},892:t=>{class e{constructor(t,e,i,s){this.width=Number.isNaN(i)?0:i,this.height=Number.isNaN(s)?0:s,this.x=!Number.isNaN(t)&&t>=0?t-this.width/2:-100,this.y=!Number.isNaN(e)&&e>=0?e-this.height/2:-100}collide(t){let s=-1,o=!1;if(t instanceof e)o=this.x<t.x+t.width&&this.x+this.width>t.x&&this.y<t.y+t.height&&this.y+this.height>t.y;else if(t instanceof i){const e=t.collide(this);o=e.collided,s=e.distance}else console.log(" * CollisionBox.collide: You can only collide with another collision object!");return{collided:o,distance:s}}}class i{constructor(t,e,i){this.x=!Number.isNaN(t)&&t>=0?t:-100,this.y=!Number.isNaN(e)&&e>=0?e:-100,this.radius=Number.isNaN(i)?0:i/2}distanceTo(t){let s=-1;if(t instanceof i){const e=this.x-t.x,i=this.y-t.y;s=Math.sqrt(e*e+i*i)}else if(t instanceof e){const e=Math.abs(t.height*this.x+t.x*t.y-t.x*(t.y+t.height))/Math.sqrt(t.height**2),i=Math.abs(t.height*this.x+(t.x+t.width)*t.y-(t.x+t.width)*(t.y+t.height))/Math.sqrt(t.height**2),o=Math.abs(-t.width*this.y+(t.x+t.width)*t.y-t.x*t.y)/Math.sqrt(t.width**2),n=Math.abs(-t.width*this.y+(t.x+t.width)*(t.y+t.height)-t.x*(t.y+t.height))/Math.sqrt(t.width**2),c=this.x-(t.x+t.width/2),a=this.y-(t.y+t.height/2);s={leftDist:e,rightDist:i,topDist:o,bottomDist:n,centerDist:Math.sqrt(c*c+a*a)}}else console.log(" * CollisionCircle.distanceTo: You can only check with another collision object!");return s}collide(t){let s=-1,o=!1;if(t instanceof i)s=this.distanceTo(t),o=s<this.radius+t.radius;else if(t instanceof e){s=this.distanceTo(t);const{leftDist:e,rightDist:i,topDist:n,bottomDist:c,centerDist:a}=s,r=e<this.radius||i<this.radius||this.x>t.x&&this.x<t.x+t.width,h=n<this.radius||c<this.radius||this.y>t.y&&this.y<t.y+t.height,l=Math.sqrt((t.width/2)**2+(t.height/2)**2);o=r&&h&&a<this.radius+l}else console.log(" * CollisionCircle.collide: You can only collide with another collision object!");return{collided:o,distance:s}}}const s={handleCollision:function(t,s,o){const{state:n,shapes:c}=this.game,a="string"==typeof t?c[t]:c[t.type],r="string"==typeof s?c[s]:c[s.type];Object.entries("string"==typeof t?n[t]:{[t.id]:t}).forEach((function([t,c]){const{x:h,y:l,width:d,height:u}=c,f="circle"===a?new i(h,l,d):new e(h,l,d,u);Object.entries("string"==typeof s?n[s]:{[s.id]:s}).forEach((function([s,n]){if(t!==s){const{x:t,y:s,width:a,height:h}=n,l="circle"===r?new i(t,s,a):new e(t,s,a,h),d=f.collide(l);d.collided&&o(c,n,d.distance)}}))}))}};t.exports={server:s}},228:t=>{t.exports={client:{connect:function(t={}){const{game:e,colyseus:i,connectEvents:s}=this;let o=this;e.room=i.join("main",t),e.room.onJoin.add((()=>{e.roomJoined=!0;for(let t in s)for(let e in s[t])this[t](...s[t][e])})),e.room.listen("board/:id",(function(t){"add"==t.operation&&(o.setSize(500,500),o.createSquare(0,0,t.value.width,t.value.height,t.value.color))}))},addConnectEvent:function(t,e){const{connectEvents:i}=this;i[t]||(i[t]=[]),i[t].push(e)},canSend:function(){return this.game.roomJoined},sendAction:function(t,e){e?this.game.room.send({[t]:!0,...e}):this.game.room.send({[t]:!0})},myId:function(){return this.game.room.sessionId}},server:{handleActions:function(t,e){const i={...this.defaultActions,...t};for(let t in i)e[t]&&i[t](e)}}}},800:t=>{const e={drawBackground:function(t,e=1,i=this.game.width,s=this.game.height){const{game:o}=this,n=o.add.sprite(0,0,t);n.setScale(e),n.depth=0;let{width:c,height:a}=n;c*=e,a*=e;for(let n=0;n<=Math.floor(i/c)+1;n++)for(let i=0;i<=Math.floor(s/a)+1;i++)if(n>0||i>0){const s=o.add.sprite(c*n,a*i,t);s.setScale(e),s.depth=0}},createSquare:function(t,e,i,s,o,n=0){const c=new Phaser.Geom.Rectangle(t,e,i,s),a=this.game.add.graphics({fillStyle:{color:"0x"+o},depth:n});return a.fillRectShape(c),a},updateSquare:function(t,e,i,s,o,n){const c=new Phaser.Geom.Rectangle(t,e,i,s);n.clear(),n.fillStyle={color:"0x"+o},n.fillRectShape(c)},createSprite:function(t,e,i,s=1){let o=this.game.add.sprite(e,i,t);return o.setScale(s),o},getSpriteSize:function(t,e=1){let i=this.game.add.sprite(-100,-100,t),{width:s,height:o}=i;return i.destroy(),s*=e,o*=e,{width:s,height:o}}},i={setupBoard:function(t,e,i){this.boardWidth=t,this.boardHeight=e,this.game.state.board.board={width:t,height:e,color:i}},getSize:function(t){const{sizes:e}=this.game;let i={width:0,height:0};return Object.keys(e).includes(t)&&(i=e[t]),i}};t.exports={client:e,server:i}},417:t=>{const e={setBounds:function(t,e){t>0&&(this.game.gameWidth=t),e>0&&(this.game.gameHeight=e)},checkBounds:function(t,e,i){const{gameWidth:s,gameHeight:o}=this.game;let n=!0,c=-1;if(s&&o){const a="x"===e?s:o,r="x"===e?t.width:t.height,h="x"===e?t.width/2:t.height/2;t[e]-h+i<0?(n=!1,c=h):t[e]-h+i+r>a&&(n=!1,c=a-r+h)}return{validMove:n,fallbackPos:c}},move:function(t,e,i){let s=!0,o=-1;const n=this.checkBounds(t,e,i);n.validMove||(s=!1,o=n.fallbackPos);const c=this.checkBarriers(t,e,i);c.validMove||(s=!1,o=c.fallbackPos),s?t[e]+=i:t[e]=o},purchase:function(t,e="score",i,s,o=1){t[e]>=i&&(t[e]-=i,t[s]+=o)},setDefaultActions:function(){const{state:t,sizes:e}=this.game;this.defaultActions={setSpriteSize:i=>{const{type:s,width:o,height:n}=i;e[s]={width:o,height:n},Object.values(t[s]).forEach((t=>{t.width=o,t.height=n}))}}},runGameLoop:function(){const t=this;let e=Date.now();this.game.onUpdate&&setImmediate((function i(){const s=Date.now(),o=s-e;o>0&&(t.game.onUpdate(o),e=s),setImmediate(i)}))}};t.exports={client:{setSize:function(t,e){const{game:i}=this;t>0&&(i.width=t),e>0&&(i.height=e)},loadImage:function(t,e){return this.game.load.image(t,"asset/"+e)},setupKeys:function(t){const{game:e,addConnectEvent:i}=this;e.roomJoined?this.keys=this.game.input.keyboard.addKeys(t):i("setupKeys",[t])},getKeysDown:function(){const t={};for(let e in this.keys)t[e]=this.keys[e].isDown;return t},cameraFollow:function(t){this.game.cameras.main.startFollow(t)},cameraBounds:function(t=this.game.width,e=this.game.height){this.game.cameras.main.setBounds(0,0,t,e)},sendSpriteSize:function(t,e=1){this.canSend()?this.game.textures.exists(t)&&this.sendAction("setSpriteSize",{type:t,...this.getSpriteSize(t,e)}):this.addConnectEvent("sendSpriteSize",[t,e])}},server:e}},225:(t,e,i)=>{const s=i(222),o=i(228),n=i(800),c=i(417),a=i(488),r=i(281),h=i(892),l=i(541),d=i(83),u={...s.client,...o.client,...n.client,...c.client,...a.client,...r.client,...d.client},f={...s.server,...o.server,...n.server,...c.server,...a.server,...h.server,...l.server,...d.server};t.exports={clientMethods:u,serverMethods:f,linkMethods:function(t,e){for(let i in e)t[i]=e[i].bind(t)}}},83:t=>{const e={setupLocations:function(t){this.game.state[t]={}},createALocation:function(t,e,i,s,o){this.game.state[t][e]={...i,color:s,rules:o}},handleLocations:function(t,e){const i=this;Object.values(this.game.state[t]).forEach((s=>{const{width:o,height:n,x:c,y:a}=s;this.game.sizes[t]?i.handleCollision(e,s,(function(t,e){e.rules(t)})):i.handleCollision(e,{...s,x:c+o/2,y:a+n/2},(function(t,e){e.rules(t)}))}))},nextLocationId:function(t){return`${t}${Object.keys(this.game.state[t]).length+1}`}};t.exports={client:{addLocations:function(t,e=1){this.game[t]={},this.game.scales[t]=e,this.sendSpriteSize(t,e)},getLocations:function(t,e=function(){},i=function(){},s=function(){}){const{game:o}=this,n=this;o.roomJoined?(o.room.listen(t+"/:id",(function(s){if("add"==s.operation){const{id:i,x:c,y:a,width:r,height:h,color:l}=s.value;if(o.textures.exists(t)){const e=o.add.sprite(c,a,t);e.setScale(o.scales[t]||1),o[t][i]={sprite:e,...s.value}}else{const e=n.createSquare(r,h,c,a,l);o[t][i]={graphics:e,...s.value}}e(o[t][i],s.value)}else if("remove"==s.operation){const{id:e}=s.path,{graphics:n,sprite:c}=o[t][e];n&&n.destroy(),c&&c.destroy(),delete o[t][e],i(e)}})),o.room.listen(t+"/:id/:attribute",(function(e){if("replace"==e.operation){const{id:i,attribute:c}=e.path,a=o[t][i];!a.graphics||"x"!=c&&"y"!=c&&"width"!=c&&"height"!=c&&"color"!=c?!a.sprite||"x"!=c&&"y"!=c?a[c]=e.value:a.sprite[c]=e.value:(a[c]=e.value,n.updateSquare(a.width,a.height,a.x,a.y,a.color,a.graphics)),s(i,c,e.value)}}))):this.addConnectEvent("getLocations",[t,e,i,s])}},server:e}},488:t=>{const e={setupResources:function(t){this.game.state[t]={},this.counts[t]=0},createResources:function(t,e){for(var i=0;i<e;i++){let e=Math.random()*this.boardWidth,i=Math.random()*this.boardHeight;this.createAResource(t,e,i)}},createAResource:function(t,e,i){this.counts[t]+=1,this.game.state[t][this.counts[t]]={id:this.counts[t],x:e,y:i,type:"resource",height:103,width:61}},deleteAResource:function(t,e){delete this.game.state[t][e]}};t.exports={client:{addResources:function(t){this.game[t]={}},getResources:function(t,e=function(){},i=function(){},s=function(){}){const{game:o}=this;o.room.listen(t+"/:id",(function(s){if("add"==s.operation){const{id:i,x:n,y:c}=s.value;o[t][i]={sprite:o.add.sprite(n,c,t),id:i},e(o[t][i],s.value)}else if("remove"==s.operation){const{id:e}=s.path;o[t][e].sprite.destroy(),delete o[t][e],i(e)}})),o.room.listen(t+"/:id/:attribute",(function(e){if("replace"==e.operation){const{id:i,attribute:n}=e.path;o[t][i].sprite[n]=e.value,s(i,n,e.value)}}))}},server:e}},877:(t,e,i)=>{const{serverMethods:s,linkMethods:o}=i(225);t.exports=class{constructor(){this.game=null,this.counts={},this.boardWidth=500,this.boardHeight=500,this.defaultActions={}}setup(t){this.game=t,this.game.setState({board:{}}),this.game.sizes={},this.game.shapes={},this.game.barriers={},o(this,s),this.setDefaultActions(),this.runGameLoop()}}},281:t=>{function e(t){const e=document.getElementById("input-overlay");t&&e.classList.contains("hide")?e.classList.remove("hide"):t||e.classList.contains("hide")||e.classList.add("hide")}function i(t){console.log(t+" is joining...")}const s=t=>t.join("\n");function o({lives:t}){const e=[];for(let i=0;i<t;i++)e.push('<span class="life"></span>');return s(e)}const n={StoreItem:class{constructor(t,e,i,s,o){this.image="asset/"+t,this.name=e,this.costAttr=i,this.cost=s,this.action=o}},useLoginScreen:function(t=i,o="IO Game",n="Display Name",c="START"){const a=document.querySelector("#input-overlay > form.login");a.innerHTML=s([`<h1>${o}</h1>`,`<input id="displayName" type="text" placeholder="${n}" />`,`<button type="submit">${c}</button>`]),e(!0),a.classList.remove("hide"),a.onsubmit=function(i){i.preventDefault();const s=document.getElementById("displayName").value||"player";a.classList.add("hide"),e(!1),t(s)}},handleLeaderboard:function(t,e="Leaderboard"){const{game:i}=this;document.querySelector("#game-overlay > .leaderboard").innerHTML=s([`<h3>${e}</h3>`,...Object.entries(i[t]).map((([t,e])=>`<div class="player" id="${t}">\n      ${"number"==typeof e.lives?s(['<div class="lives">',o(e),"</div>"]):""}\n        <div class="text">\n          ${"string"==typeof e.name?s(['<p class="name"'+(this.myId()===t?' style="color: #8BE1FF;"':"")+">",e.name,"</p>"]):""}\n          ${"number"==typeof e.score?s(['<p class="score"'+(this.myId()===t?' style="color: #8BE1FF;"':"")+">",e.score,"</p>"]):""}\n        </div>\n      </div>`))])},useStore:function(t="Store",e){document.querySelector("#input-overlay > .store").innerHTML=s([`<h1>${t}</h1>`,...e.map((t=>`<div class="store-item">\n    <img src="${t.image}" />\n    <h2>${t.name}</h2>\n    <p>Cost: ${t.cost} x ${t.costAttr}</p>\n    <button id="${t.action}">Buy</button>\n    </div>`))]);const i=this;e.forEach((t=>{document.getElementById(t.action).onclick=function(){i.sendAction(t.action)}}))},toggleStore:function(){const t=document.querySelector("#input-overlay > .store");!t.classList.contains("locked")&&t.classList.contains("hide")?(e(!0),t.classList.remove("hide"),t.classList.add("locked")):t.classList.contains("locked")||(e(!1),t.classList.add("hide"),t.classList.add("locked"))},unlockStore:function(){const t=document.querySelector("#input-overlay > .store");t.classList.contains("locked")&&t.classList.remove("locked")}};t.exports={client:n}}},e={},function i(s){if(e[s])return e[s].exports;var o=e[s]={exports:{}};return t[s](o,o.exports,i),o.exports}(877);var t,e}));
=======
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports["server-lib"]=e():t["server-lib"]=e()}(global,(function(){return t={541:t=>{function e(t,e,i,s){const a="x"===i?[e.x-e.width/2,e.x+e.width/2]:[e.y-e.height/2,e.y+e.height/2],o="x"===i?t.width:t.height;return s<0?a[1]+o/2:a[0]-o/2}function i(t,e,i){const s=t[i]>e[i]?1:-1,a="x"===i?"y":"x";return Math.sqrt(Math.pow(t.width/2+e.width/2+2e-6,2)-Math.pow(t[a]-e[a],2))*s+e[i]}function s(t,e,s,a){const o=t.width/2;let n=[];for(let t in a)a[t]<o&&n.push(t);const c={left:!1,top:!1,right:!0,bottom:!0};function r(a,o){const r=e.x+e.width/2*(c[a]?1:-1),h=e.y+e.height/2*(c[o]?1:-1),l=c[a]?[r,t.x]:[t.x,r],d=c[o]?[h,t.y]:[t.y,h];if(n.includes(a+"Dist")&&n.includes(o+"Dist")&&l[0]<l[1]&&d[0]<d[1]){newPos=i(t,{x:r,y:h,width:0},s);const e=c["x"===s?a:o]?[t[s],newPos]:[newPos,t[s]];return e[0]<e[1]?newPos:t[s]}}return r("left","top")||r("left","bottom")||r("right","top")||r("right","bottom")||-1}const a={useBarrier:function(t,e){const{barriers:i}=this.game;Object.keys(i).includes(t)?i[t].push(e):i[t]=[e]},checkBarriers:function(t,a,o){const{barriers:n,shapes:c}=this.game;let r=!0,h=-1;return Object.keys(n).includes(t.type)&&n[t.type].forEach((n=>{this.handleCollision({...t,[a]:t[a]+o},n,((t,l,d)=>{if(r=!1,"circle"===c[n]&&"circle"===c[t.type])h=i(t,l,a);else if("circle"===c[n]){const i=s(l,t,a,d);h=-1!==i?t[a]+l[a]-i:e(t,l,a,o)}else if("circle"===c[t.type]){const i=s(t,l,a,d);h=-1!==i?i:e(t,l,a,o)}else h=e(t,l,a,o)}))})),{validMove:r,fallbackPos:h}}};t.exports={server:a}},222:t=>{const e={addCharacters:function(t,e=1){this.game[t]={},this.game.scales[t]=e,this.sendSpriteSize(t,e)},getCharacters:function(t,e=function(){},i=function(){},s=function(){}){const{game:a}=this;a.roomJoined?(a.room.listen(t+"/:id",(function(s){if("add"==s.operation){const{id:i,x:o,y:n}=s.value;let c=a.add.container(o,n),r=a.front_layer.create(0,0,t);c.add([r]),c.setScale(a.scales[t]||1),a[t][i]={sprite:c,...s.value,attached:{}},e(a[t][i],s.value)}else if("remove"==s.operation){const{id:e}=s.path;for(item in a[t][e].sprite.destroy(),a[t][e].attached)a[t][e].attached[item].sprite.destroy();delete a[t][e],i(e)}})),a.room.listen(t+"/:id/:attribute",(function(e){if("add"==e.operation&&e.value.type){let s=a[t][e.value.id].sprite.x,n=a[t][e.value.id].sprite.y;if("text"==e.value.type){let i=a.add.text(s+e.value.x,n+e.value.y,` ${e.value.text} `,{color:"white",backgroundColor:"rgba(0,0,0,0.7)"}).setScale(e.value.scale);a[t][e.value.id].attached[e.value.name]={...e.value,sprite:i}}if("item"==e.value.type){let i=a.front_layer.create(e.value.x,e.value.y,e.value.image).setScale(e.value.scale);a[t][e.value.id].sprite.add(i),a[t][e.value.id].attached[e.value.name]={...e.value,sprite:i}}if("bar"==e.value.type){var i=new Phaser.Geom.Rectangle(0,0,e.value.width,e.value.height);i=a.add.graphics({fillStyle:{color:"0x999999"}}).fillRectShape(i),a[t][e.value.id].attached[e.value.name+"Background"]={...e.value,sprite:i};var o=new Phaser.Geom.Rectangle(0,0,e.value.width,e.value.height);o=a.add.graphics({fillStyle:{color:"0x999900"}}).fillRectShape(o),i.x=s+e.value.x,o.x=s+e.value.x,i.y=n+e.value.y,o.y=n+e.value.y,o.setScale(100/e.value,1),a[t][e.value.id].attached[e.value.name]={...e.value,sprite:o}}}if("remove"==e.operation&&(a[t][e.path.id].attached[e.path.attribute].sprite.destroy(),"bar"==a[t][e.path.id].attached[e.path.attribute].type&&a[t][e.path.id].attached[e.path.attribute+"Background"].sprite.destroy(),delete a[t][e.path.id].attached[e.path.attribute]),"replace"==e.operation){const{id:i,attribute:o}=e.path;if("x"==o||"y"==o){for(let s in a[t][i].attached)"item"!==a[t][i].attached[s].type&&(a[t][i].attached[s].sprite[o]=e.value+a[t][i].attached[s][o]);a[t][i].sprite[o]=e.value}else"angle"==o||"angle"==o?a[t][i].sprite[o]=e.value:a[t][i][o]=e.value;s(i,o,e.value)}})),a.room.listen(t+"/:id/:attribute/:id",(function(e){console.log(e),"filled"===e.path.id&&(console.log(a[t][e.rawPath[1]].attached[e.rawPath[2]].sprite),a[t][e.rawPath[1]].attached[e.rawPath[2]].sprite.setScale(e.value/100,1)),"text"===e.path.id&&a[t][e.rawPath[1]].attached[e.rawPath[2]].sprite.setText(e.value)}))):this.addConnectEvent("getCharacters",[t,e,i,s])}},i={setupCharacters:function(t,e="box"){this.game.state[t]={},this.game.shapes[t]=e},createACharacter:function(t,e,i){this.game.state[t][e]={...this.getSize(t),...i,id:e,type:t}},getACharacter:function(t,e){return this.game.state[t][e]},deleteACharacter:function(t,e){delete this.game.state[t][e]},nextCharacterId:function(t){return`${t}${Object.keys(this.game.state[t]).length+1}`},attachTo:function(t,e,i){this.game.state[t][e][i.name]={...i,id:e}},unAttach:function(t,e,i){delete this.game.state[t][e][i]},follow:function(t,e,i=0,s=1){Object.keys(this.game.state[e]).length>=1&&Object.keys(this.game.state[e]).forEach((a=>{if(Object.keys(this.game.state[t]).length>=1){let o=this.game.state[e][a].x,n=this.game.state[e][a].y,c=null,r=0;if(Object.keys(this.game.state[t]).forEach((e=>{if(null==c)c=e,r=Math.sqrt((o-this.game.state[t][e].x)**2+(n-this.game.state[t][e].y)**2);else{let i=o-this.game.state[t][e].x,s=n-this.game.state[t][e].y,a=Math.sqrt(i**2+s**2);a<=r&&(c=e,r=a)}})),r<i||0==r)return;{let i,r,h=o-this.game.state[t][c].x,l=n-this.game.state[t][c].y,d=0;h>=0?(i=Math.cos(Math.atan(l/h)),r=Math.sin(Math.atan(l/h)),d=Math.atan(l/h)*(180/Math.PI)-90):(i=-Math.cos(Math.atan(l/h)),r=-Math.sin(Math.atan(l/h)),d=-Math.atan(l/-h)*(180/Math.PI)+90),this.game.state[e][a].x-=i*s,this.game.state[e][a].y-=r*s}}}))}};t.exports={client:e,server:i}},892:t=>{class e{constructor(t,e,i,s){this.width=Number.isNaN(i)?0:i,this.height=Number.isNaN(s)?0:s,this.x=!Number.isNaN(t)&&t>=0?t-this.width/2:-100,this.y=!Number.isNaN(e)&&e>=0?e-this.height/2:-100}collide(t){let s=-1,a=!1;if(t instanceof e)a=this.x<t.x+t.width&&this.x+this.width>t.x&&this.y<t.y+t.height&&this.y+this.height>t.y;else if(t instanceof i){const e=t.collide(this);a=e.collided,s=e.distance}else console.log(" * CollisionBox.collide: You can only collide with another collision object!");return{collided:a,distance:s}}}class i{constructor(t,e,i){this.x=!Number.isNaN(t)&&t>=0?t:-100,this.y=!Number.isNaN(e)&&e>=0?e:-100,this.radius=Number.isNaN(i)?0:i/2}distanceTo(t){let s=-1;if(t instanceof i){const e=this.x-t.x,i=this.y-t.y;s=Math.sqrt(e*e+i*i)}else if(t instanceof e){const e=Math.abs(t.height*this.x+t.x*t.y-t.x*(t.y+t.height))/Math.sqrt(t.height**2),i=Math.abs(t.height*this.x+(t.x+t.width)*t.y-(t.x+t.width)*(t.y+t.height))/Math.sqrt(t.height**2),a=Math.abs(-t.width*this.y+(t.x+t.width)*t.y-t.x*t.y)/Math.sqrt(t.width**2),o=Math.abs(-t.width*this.y+(t.x+t.width)*(t.y+t.height)-t.x*(t.y+t.height))/Math.sqrt(t.width**2),n=this.x-(t.x+t.width/2),c=this.y-(t.y+t.height/2);s={leftDist:e,rightDist:i,topDist:a,bottomDist:o,centerDist:Math.sqrt(n*n+c*c)}}else console.log(" * CollisionCircle.distanceTo: You can only check with another collision object!");return s}collide(t){let s=-1,a=!1;if(t instanceof i)s=this.distanceTo(t),a=s<this.radius+t.radius;else if(t instanceof e){s=this.distanceTo(t);const{leftDist:e,rightDist:i,topDist:o,bottomDist:n,centerDist:c}=s,r=e<this.radius||i<this.radius||this.x>t.x&&this.x<t.x+t.width,h=o<this.radius||n<this.radius||this.y>t.y&&this.y<t.y+t.height,l=Math.sqrt((t.width/2)**2+(t.height/2)**2);a=r&&h&&c<this.radius+l}else console.log(" * CollisionCircle.collide: You can only collide with another collision object!");return{collided:a,distance:s}}}const s={handleCollision:function(t,s,a){const{state:o,shapes:n}=this.game,c="string"==typeof t?n[t]:n[t.type],r="string"==typeof s?n[s]:n[s.type];Object.entries("string"==typeof t?o[t]:{[t.id]:t}).forEach((function([t,n]){const{x:h,y:l,width:d,height:u}=n,f="circle"===c?new i(h,l,d):new e(h,l,d,u);Object.entries("string"==typeof s?o[s]:{[s.id]:s}).forEach((function([s,o]){if(t!==s){const{x:t,y:s,width:c,height:h}=o,l="circle"===r?new i(t,s,c):new e(t,s,c,h),d=f.collide(l);d.collided&&a(n,o,d.distance)}}))}))}};t.exports={server:s}},228:t=>{t.exports={client:{connect:function(t={}){const{game:e,colyseus:i,connectEvents:s}=this;let a=this;e.room=i.join("main",t),e.room.onJoin.add((()=>{e.roomJoined=!0;for(let t in s)for(let e in s[t])this[t](...s[t][e])})),e.room.listen("board/:id",(function(t){"add"==t.operation&&(a.setSize(500,500),a.createSquare(0,0,t.value.width,t.value.height,t.value.color))}))},addConnectEvent:function(t,e){const{connectEvents:i}=this;i[t]||(i[t]=[]),i[t].push(e)},canSend:function(){return this.game.roomJoined},sendAction:function(t,e){e?this.game.room.send({[t]:!0,...e}):this.game.room.send({[t]:!0})},myId:function(){return this.game.room.sessionId}},server:{handleActions:function(t,e){const i={...this.defaultActions,...t};for(let t in i)e[t]&&i[t](e)}}}},800:t=>{const e={drawBackground:function(t,e=1,i=this.game.width,s=this.game.height){const{game:a}=this,o=a.add.sprite(0,0,t);o.setScale(e),o.depth=0;let{width:n,height:c}=o;n*=e,c*=e;for(let o=0;o<=Math.floor(i/n)+1;o++)for(let i=0;i<=Math.floor(s/c)+1;i++)if(o>0||i>0){const s=a.add.sprite(n*o,c*i,t);s.setScale(e),s.depth=0}},createSquare:function(t,e,i,s,a,o=0){const n=new Phaser.Geom.Rectangle(t,e,i,s),c=this.game.add.graphics({fillStyle:{color:"0x"+a},depth:o});return c.fillRectShape(n),c},updateSquare:function(t,e,i,s,a,o){const n=new Phaser.Geom.Rectangle(t,e,i,s);o.clear(),o.fillStyle={color:"0x"+a},o.fillRectShape(n)},createSprite:function(t,e,i,s=1){let a=this.game.add.sprite(e,i,t);return a.setScale(s),a},getSpriteSize:function(t,e=1){let i=this.game.add.sprite(-100,-100,t),{width:s,height:a}=i;return i.destroy(),s*=e,a*=e,{width:s,height:a}}},i={setupBoard:function(t,e,i){this.boardWidth=t,this.boardHeight=e,this.game.state.board.board={width:t,height:e,color:i}},getSize:function(t){const{sizes:e}=this.game;let i={width:0,height:0};return Object.keys(e).includes(t)&&(i=e[t]),i}};t.exports={client:e,server:i}},417:t=>{const e={setBounds:function(t,e){t>0&&(this.game.gameWidth=t),e>0&&(this.game.gameHeight=e)},checkBounds:function(t,e,i){const{gameWidth:s,gameHeight:a}=this.game;let o=!0,n=-1;if(s&&a){const c="x"===e?s:a,r="x"===e?t.width:t.height,h="x"===e?t.width/2:t.height/2;t[e]-h+i<0?(o=!1,n=h):t[e]-h+i+r>c&&(o=!1,n=c-r+h)}return{validMove:o,fallbackPos:n}},move:function(t,e,i){let s=!0,a=-1;const o=this.checkBounds(t,e,i);o.validMove||(s=!1,a=o.fallbackPos);const n=this.checkBarriers(t,e,i);n.validMove||(s=!1,a=n.fallbackPos),s?t[e]+=i:t[e]=a},purchase:function(t,e="score",i,s,a=1){t[e]>=i&&(t[e]-=i,t[s]+=a)},setDefaultActions:function(){const{state:t,sizes:e}=this.game;this.defaultActions={setSpriteSize:i=>{const{type:s,width:a,height:o}=i;e[s]={width:a,height:o},Object.values(t[s]).forEach((t=>{t.width=a,t.height=o}))}}},runGameLoop:function(){const t=this;let e=Date.now();this.game.onUpdate&&setImmediate((function i(){const s=Date.now(),a=s-e;a>0&&(t.game.onUpdate(a),e=s),setImmediate(i)}))}};t.exports={client:{setSize:function(t,e){const{game:i}=this;t>0&&(i.width=t),e>0&&(i.height=e)},loadImage:function(t,e){return this.game.load.image(t,"asset/"+e)},setupKeys:function(t){const{game:e,addConnectEvent:i}=this;e.roomJoined?this.keys=this.game.input.keyboard.addKeys(t):i("setupKeys",[t])},getKeysDown:function(){const t={};for(let e in this.keys)t[e]=this.keys[e].isDown;return t},cameraFollow:function(t){this.game.cameras.main.startFollow(t)},cameraBounds:function(t=this.game.width,e=this.game.height){this.game.cameras.main.setBounds(0,0,t,e)},sendSpriteSize:function(t,e=1){this.canSend()?this.game.textures.exists(t)&&this.sendAction("setSpriteSize",{type:t,...this.getSpriteSize(t,e)}):this.addConnectEvent("sendSpriteSize",[t,e])}},server:e}},225:(t,e,i)=>{const s=i(222),a=i(228),o=i(800),n=i(417),c=i(488),r=i(281),h=i(892),l=i(541),d=i(83),u={...s.client,...a.client,...o.client,...n.client,...c.client,...r.client,...d.client},f={...s.server,...a.server,...o.server,...n.server,...c.server,...h.server,...l.server,...d.server};t.exports={clientMethods:u,serverMethods:f,linkMethods:function(t,e){for(let i in e)t[i]=e[i].bind(t)}}},83:t=>{const e={setupLocations:function(t){this.game.state[t]={}},createALocation:function(t,e,i,s,a){this.game.state[t][e]={...i,color:s,rules:a}},handleLocations:function(t,e){const i=this;Object.values(this.game.state[t]).forEach((s=>{const{width:a,height:o,x:n,y:c}=s;this.game.sizes[t]?i.handleCollision(e,s,(function(t,e){e.rules(t)})):i.handleCollision(e,{...s,x:n+a/2,y:c+o/2},(function(t,e){e.rules(t)}))}))},nextLocationId:function(t){return`${t}${Object.keys(this.game.state[t]).length+1}`}};t.exports={client:{addLocations:function(t,e=1){this.game[t]={},this.game.scales[t]=e,this.sendSpriteSize(t,e)},getLocations:function(t,e=function(){},i=function(){},s=function(){}){const{game:a}=this,o=this;a.roomJoined?(a.room.listen(t+"/:id",(function(s){if("add"==s.operation){const{id:i,x:n,y:c,width:r,height:h,color:l}=s.value;if(a.textures.exists(t)){const e=a.add.sprite(n,c,t);e.setScale(a.scales[t]||1),a[t][i]={sprite:e,...s.value}}else{const e=o.createSquare(r,h,n,c,l);a[t][i]={graphics:e,...s.value}}e(a[t][i],s.value)}else if("remove"==s.operation){const{id:e}=s.path,{graphics:o,sprite:n}=a[t][e];o&&o.destroy(),n&&n.destroy(),delete a[t][e],i(e)}})),a.room.listen(t+"/:id/:attribute",(function(e){if("replace"==e.operation){const{id:i,attribute:n}=e.path,c=a[t][i];!c.graphics||"x"!=n&&"y"!=n&&"width"!=n&&"height"!=n&&"color"!=n?!c.sprite||"x"!=n&&"y"!=n?c[n]=e.value:c.sprite[n]=e.value:(c[n]=e.value,o.updateSquare(c.width,c.height,c.x,c.y,c.color,c.graphics)),s(i,n,e.value)}}))):this.addConnectEvent("getLocations",[t,e,i,s])}},server:e}},488:t=>{const e={setupResources:function(t){this.game.state[t]={},this.counts[t]=0},createResources:function(t,e){for(var i=0;i<e;i++){let e=Math.random()*this.boardWidth,i=Math.random()*this.boardHeight;this.createAResource(t,e,i)}},createAResource:function(t,e,i){this.counts[t]+=1,this.game.state[t][this.counts[t]]={id:this.counts[t],x:e,y:i,type:"resource",height:103,width:61}},deleteAResource:function(t,e){delete this.game.state[t][e]}};t.exports={client:{addResources:function(t){this.game[t]={}},getResources:function(t,e=function(){},i=function(){},s=function(){}){const{game:a}=this;a.roomJoined?(a.room.listen(t+"/:id",(function(s){if("add"==s.operation){const{id:i,x:o,y:n}=s.value;a[t][i]={sprite:a.add.sprite(o,n,t),id:i},e(a[t][i],s.value)}else if("remove"==s.operation){const{id:e}=s.path;a[t][e].sprite.destroy(),delete a[t][e],i(e)}})),a.room.listen(t+"/:id/:attribute",(function(e){if("replace"==e.operation){const{id:i,attribute:o}=e.path;a[t][i].sprite[o]=e.value,s(i,o,e.value)}}))):this.addConnectEvent("getResources",[t,e,i,s])}},server:e}},877:(t,e,i)=>{const{serverMethods:s,linkMethods:a}=i(225);t.exports=class{constructor(){this.game=null,this.counts={},this.boardWidth=500,this.boardHeight=500,this.defaultActions={}}setup(t){this.game=t,this.game.setState({board:{}}),this.game.sizes={},this.game.shapes={},this.game.barriers={},a(this,s),this.setDefaultActions(),this.runGameLoop()}}},281:t=>{function e(t){const e=document.getElementById("input-overlay");t&&e.classList.contains("hide")?e.classList.remove("hide"):t||e.classList.contains("hide")||e.classList.add("hide")}function i(t){console.log(t+" is joining...")}const s=t=>t.join("\n");function a({lives:t}){const e=[];for(let i=0;i<t;i++)e.push('<span class="life"></span>');return s(e)}const o={StoreItem:class{constructor(t,e,i,s,a){this.image="asset/"+t,this.name=e,this.costAttr=i,this.cost=s,this.action=a}},useLoginScreen:function(t=i,a="IO Game",o="Display Name",n="START"){const c=document.querySelector("#input-overlay > form.login");c.innerHTML=s([`<h1>${a}</h1>`,`<input id="displayName" type="text" placeholder="${o}" />`,`<button type="submit">${n}</button>`]),e(!0),c.classList.remove("hide"),c.onsubmit=function(i){i.preventDefault();const s=document.getElementById("displayName").value||"player";c.classList.add("hide"),e(!1),t(s)}},handleLeaderboard:function(t,e="Leaderboard"){const{game:i}=this;document.querySelector("#game-overlay > .leaderboard").innerHTML=s([`<h3>${e}</h3>`,...Object.entries(i[t]).map((([t,e])=>`<div class="player" id="${t}">\n      ${"number"==typeof e.lives?s(['<div class="lives">',a(e),"</div>"]):""}\n        <div class="text">\n          ${"string"==typeof e.name?s(['<p class="name"'+(this.myId()===t?' style="color: #8BE1FF;"':"")+">",e.name,"</p>"]):""}\n          ${"number"==typeof e.score?s(['<p class="score"'+(this.myId()===t?' style="color: #8BE1FF;"':"")+">",e.score,"</p>"]):""}\n        </div>\n      </div>`))])},useStore:function(t="Store",e){document.querySelector("#input-overlay > .store").innerHTML=s([`<h1>${t}</h1>`,...e.map((t=>`<div class="store-item">\n    <img src="${t.image}" />\n    <h2>${t.name}</h2>\n    <p>Cost: ${t.cost} x ${t.costAttr}</p>\n    <button id="${t.action}">Buy</button>\n    </div>`))]);const i=this;e.forEach((t=>{document.getElementById(t.action).onclick=function(){i.sendAction(t.action)}}))},toggleStore:function(){const t=document.querySelector("#input-overlay > .store");!t.classList.contains("locked")&&t.classList.contains("hide")?(e(!0),t.classList.remove("hide"),t.classList.add("locked")):t.classList.contains("locked")||(e(!1),t.classList.add("hide"),t.classList.add("locked"))},unlockStore:function(){const t=document.querySelector("#input-overlay > .store");t.classList.contains("locked")&&t.classList.remove("locked")}};t.exports={client:o}}},e={},function i(s){if(e[s])return e[s].exports;var a=e[s]={exports:{}};return t[s](a,a.exports,i),a.exports}(877);var t,e}));
>>>>>>> 2db64fde6a68e66dbee5fafacec9cca6877913c7
